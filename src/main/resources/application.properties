#spring.application.name=ecommerce-backend
server.port=8081
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/ecommerce
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# IMPORTANT: Provide database credentials securely via environment variables or secrets management
# Example Environment Variables: SPRING_DATASOURCE_USERNAME, SPRING_DATASOURCE_PASSWORD
spring.datasource.username=REPLACE_WITH_DB_USERNAME
spring.datasource.password=REPLACE_WITH_DB_PASSWORD

spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.type.preferred_uuid_jdbc_type=BINARY

# Consider managing via profiles (e.g., true for dev, false for prod)
spring.jpa.show-sql=true

encryption.salt.rounds=10

# Flyway Configuration - Recommended to enable for production schema management
spring.flyway.enabled=false
spring.flyway.baseline-on-migrate=false
spring.flyway.locations=classpath:db/migration
spring.flyway.clean-disabled=false
spring.flyway.baseline-description=Initial Setup
spring.flyway.baseline-version=0
spring.flyway.schemas=ecommerce


logging.level.org.springframework.security=DEBUG

# Email Configuration
email.from=reddy@flipkart.com
email.to=shiva@fliplart.com
app.email.verification.token.expiration-ms=86400000

#admin properties
admin.username=REPLACE_WITH_ADMIN_USERNAME
admin.email=REPLACE_WITH_ADMIN_EMAIL
admin.password=REPLACE_WITH_ADMIN_PASSWORD


#General Configuration
app.frontend.url=http://localhost:8081

# SMTP Configuration - IMPORTANT: Externalize for production (host, port, auth)
spring.mail.host = localhost
spring.mail.port = 2525

#File upload related properites
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

#Project images file location - IMPORTANT: Avoid hardcoded local paths. Use relative paths, external config, or cloud storage (e.g., S3).
# project.images = C:/Rohith/ecommerce-backend/ecommerce-backend/images/ # REMOVED - Configure externally or use cloud storage

#Below is the URL for the swagger code accessing
#http://localhost:8081/swagger-ui/index.html#/

# IMPORTANT: Provide JWT secret securely via environment variable or secrets management
# Example Environment Variable: APP_JWT_SECRET
# Generate with ```openssl rand -base64``` command
app.jwt.secret=REPLACE_WITH_JWT_SECRET
app.jwt.access-token.expiration-ms=900000
app.jwt.refresh-token.expiration-ms=604800000


app.password-reset-token.expiration-ms=3600000

rate-limit.login.attempts = 5
rate-limit.login.duration-Minutes = 1
rate-limit.login.duration-Minutes = 0
rate-limit.reset.password.attempts = 3
rate-limit.reset.duration-Hours = 24

wishlist.product.max_count = 300

app.frontend.url=http://localhost:8081

